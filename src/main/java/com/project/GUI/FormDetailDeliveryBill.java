/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.project.GUI;

import java.awt.Component;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

import com.project.BUS.EnterCouponBUS;
import com.project.BUS.ProductBUS;
import com.project.BUS.RecipeBUS;
import com.project.BUS.SupplierBUS;
import com.project.Common.Common;
import com.project.DAO.EmployeeDAO;
import com.project.DAO.WareHouseDAO;
import com.project.DTO.DetailEnterCouponDTO;
import com.project.DTO.DetailRecipeDTO;
import com.project.DTO.EmployeeDTO;
import com.project.DTO.EnterCouponDTO;
import com.project.DTO.PermissionAccount;
import com.project.DTO.ProductDTO;
import com.project.DTO.RecipeDTO;
import com.project.DTO.SupplierDTO;
import com.project.DTO.WareHouseDTO;

/**
 *
 * @author thuan
 */
public class FormDetailDeliveryBill extends javax.swing.JFrame {
    public int countBoxInput = 1;
    private int id_recipe;
    public ArrayList<WareHouseDTO> list_ingredient;
    private Map<String, ProductDTO> productMap;
    private Map<String, EmployeeDTO> employeeMap;
    private Map<String, WareHouseDTO> ingredientMap;
    private RecipeDTO recipeDTO;

    public FormDetailDeliveryBill(int id_recipe) {
        this.id_recipe = id_recipe;
        recipeDTO = RecipeBUS.detailRecipeByIdBUS(id_recipe);

        list_ingredient = WareHouseDAO.get_all_ingredients();
        ingredientMap = new HashMap<>();

        for (WareHouseDTO wareHouseDTO : list_ingredient) {
            ingredientMap.put(wareHouseDTO.getName(), wareHouseDTO);
        }

        initComponents();

        productMap = new HashMap<>();
        employeeMap = new HashMap<>();
        ArrayList<ProductDTO> list_product = ProductBUS.getAllProduct();
        ArrayList<EmployeeDTO> employees = EmployeeDAO.get_all_employee();

        jComboBox3.setText(String.valueOf(recipeDTO.getName_recipe()));
        inputName.setText(String.valueOf(recipeDTO.getDescription()));

        for (ProductDTO productDTO : list_product) {

            if (recipeDTO.getName_product().equals(productDTO.getProduct_name())) {
                jComboBox2.setText(recipeDTO.getName_product());
                productMap.put(recipeDTO.getName_product(), productDTO);

            } else {
            }
            jComboBox2.setEditable(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        setTitle("Chi tiết công thức");
        setResizable(false);
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        BoxName1 = new javax.swing.JPanel();
        NameSupplier1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JTextField();
        BoxName2 = new javax.swing.JPanel();
        NameSupplier2 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JTextField();
        BoxName = new javax.swing.JPanel();
        NameSupplier = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        BoxInput = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BoxInput1 = new javax.swing.JPanel();
        InputNameIngredient1 = new javax.swing.JComboBox<>();
        InputQuantity1 = new javax.swing.JTextField();
        InputPrice1 = new javax.swing.JTextField();
        BoxBtn = new javax.swing.JPanel();
        BtnMinus = new javax.swing.JButton();
        BtnPlus = new javax.swing.JButton();
        BtnAdd = new javax.swing.JButton();
        BtnClose = new javax.swing.JButton();
        BtnMinus.setCursor(new Cursor(Cursor.HAND_CURSOR));
        BtnPlus.setCursor(new Cursor(Cursor.HAND_CURSOR));
        BtnAdd.setCursor(new Cursor(Cursor.HAND_CURSOR));
        BtnClose.setCursor(new Cursor(Cursor.HAND_CURSOR));
        int count = 1;
        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(96, 153, 102));
        jLabel5.setText("+");

        // setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(722, 453));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setMinimumSize(new java.awt.Dimension(100, 30));
        jPanel1.setPreferredSize(new java.awt.Dimension(722, 30));
        jPanel1.setBackground(new java.awt.Color(255, 153, 102));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setBackground(new java.awt.Color(255, 153, 102));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Chi tiết công thức");
        jLabel1.setPreferredSize(new java.awt.Dimension(37, 50));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE));

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setMaximumSize(new java.awt.Dimension(474, 350));
        jPanel2.setMinimumSize(new java.awt.Dimension(474, 350));
        jPanel2.setPreferredSize(new java.awt.Dimension(474, 350));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel5.setPreferredSize(new java.awt.Dimension(1010, 130));
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 10));

        BoxName1.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName1.setPreferredSize(new java.awt.Dimension(330, 45));
        BoxName1.setLayout(new java.awt.BorderLayout(10, 0));

        NameSupplier1.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        NameSupplier1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NameSupplier1.setText("Tên sản phẩm");
        NameSupplier1.setMaximumSize(new java.awt.Dimension(130, 40));
        NameSupplier1.setMinimumSize(new java.awt.Dimension(130, 40));
        NameSupplier1.setPreferredSize(new java.awt.Dimension(130, 40));
        NameSupplier1.setVerifyInputWhenFocusTarget(false);
        BoxName1.add(NameSupplier1, java.awt.BorderLayout.LINE_START);

        jComboBox2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        // jComboBox2.setModel(
        // new javax.swing.DefaultComboBoxModel<SupplierDTO>(new String[] { "Item 1",
        // "Item 2", "Item 3", "Item 4" }));
        BoxName1.add(jComboBox2, java.awt.BorderLayout.CENTER);

        jPanel5.add(BoxName1);

        BoxName2.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName2.setPreferredSize(new java.awt.Dimension(330, 45));
        BoxName2.setLayout(new java.awt.BorderLayout(10, 0));

        NameSupplier2.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        NameSupplier2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NameSupplier2.setText("Tên công thức");
        NameSupplier2.setMaximumSize(new java.awt.Dimension(130, 40));
        NameSupplier2.setMinimumSize(new java.awt.Dimension(130, 40));
        NameSupplier2.setPreferredSize(new java.awt.Dimension(130, 40));
        NameSupplier2.setVerifyInputWhenFocusTarget(false);
        BoxName2.add(NameSupplier2, java.awt.BorderLayout.LINE_START);

        jComboBox3.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        // jComboBox3.setModel(
        // new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2",
        // "Item 3", "Item 4" }));
        BoxName2.add(jComboBox3, java.awt.BorderLayout.CENTER);

        jPanel5.add(BoxName2);

        BoxName.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName.setPreferredSize(new java.awt.Dimension(330, 45));
        BoxName.setLayout(new java.awt.BorderLayout(10, 0));

        NameSupplier.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        NameSupplier.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NameSupplier.setText("mô tả công thức");
        NameSupplier.setMaximumSize(new java.awt.Dimension(130, 40));
        NameSupplier.setMinimumSize(new java.awt.Dimension(130, 40));
        NameSupplier.setPreferredSize(new java.awt.Dimension(120, 40));
        NameSupplier.setVerifyInputWhenFocusTarget(false);
        BoxName.add(NameSupplier, java.awt.BorderLayout.LINE_START);

        inputName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        BoxName.add(inputName, java.awt.BorderLayout.CENTER);

        jPanel5.add(BoxName);

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.Y_AXIS));

        generaUI();

        jScrollPane2.setViewportView(jPanel7);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE));
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                                .addContainerGap()));

        jPanel2.add(jPanel6, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        BoxBtn.setPreferredSize(new java.awt.Dimension(715, 55));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 20, 0);
        flowLayout1.setAlignOnBaseline(true);
        BoxBtn.setLayout(flowLayout1);

        BtnMinus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        BtnMinus.setText("-");
        BtnMinus.setBorder(new javax.swing.border.MatteBorder(null));
        BtnMinus.setMaximumSize(new java.awt.Dimension(100, 55));
        BtnMinus.setMinimumSize(new java.awt.Dimension(100, 55));
        BtnMinus.setPreferredSize(new java.awt.Dimension(100, 55));
        BtnMinus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnMinusMouseClicked(evt);
            }
        });
        BtnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMinusActionPerformed(evt);
            }
        });
        // BoxBtn.add(BtnMinus);

        BtnPlus.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        BtnPlus.setText("+");
        BtnPlus.setBorder(new javax.swing.border.MatteBorder(null));
        BtnPlus.setMaximumSize(new java.awt.Dimension(100, 55));
        BtnPlus.setMinimumSize(new java.awt.Dimension(100, 55));
        BtnPlus.setPreferredSize(new java.awt.Dimension(100, 55));
        BtnPlus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnPlusMouseClicked(evt);
            }
        });
        BtnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPlusActionPerformed(evt);
            }
        });
        // BoxBtn.add(BtnPlus);

        BtnAdd.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        BtnAdd.setText("Chỉnh sửa");
        BtnAdd.setForeground(new java.awt.Color(255, 255, 255));
        BtnAdd.setBackground(new java.awt.Color(0, 191, 255));
        BtnAdd.setBorder(new javax.swing.border.MatteBorder(null));
        BtnAdd.setMaximumSize(new java.awt.Dimension(100, 55));
        BtnAdd.setMinimumSize(new java.awt.Dimension(100, 55));
        BtnAdd.setPreferredSize(new java.awt.Dimension(100, 55));
        BtnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnAddMouseClicked(evt);
            }
        });
        BtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddActionPerformed(evt);
            }
        });
        BoxBtn.add(BtnAdd);

        BtnClose.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        BtnClose.setText("Đóng");
        BtnClose.setBorder(new javax.swing.border.MatteBorder(null));
        BtnClose.setMaximumSize(new java.awt.Dimension(100, 55));
        BtnClose.setMinimumSize(new java.awt.Dimension(100, 55));
        BtnClose.setPreferredSize(new java.awt.Dimension(100, 55));
        BtnClose.setForeground(new java.awt.Color(255, 255, 255));
        BtnClose.setBackground(java.awt.Color.RED);
        BtnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnCloseMouseClicked(evt);
            }
        });
        BtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCloseActionPerformed(evt);
            }
        });
        BoxBtn.add(BtnClose);

        getContentPane().add(BoxBtn, java.awt.BorderLayout.PAGE_END);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    public void generaTitleUI() {
        BoxInput.setMaximumSize(new java.awt.Dimension(700, 35));
        BoxInput.setMinimumSize(new java.awt.Dimension(700, 35));
        BoxInput.setPreferredSize(new java.awt.Dimension(700, 35));
        BoxInput.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tên Nguyên liệu");
        BoxInput.add(jLabel2);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("đơn vị");
        BoxInput.add(jLabel3);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("số lượng");
        BoxInput.add(jLabel4);

        jPanel7.add(BoxInput);
    }

    public void generaUI() {

        jPanel7.removeAll(); // Clear jPanel7 before adding new components
        jPanel7.revalidate();

        generaTitleUI();

        for (DetailRecipeDTO item : recipeDTO.getDetailRecipe()) {
            JPanel BoxInputCopy = new JPanel();

            JTextField InputNameIngredientCopy = new JTextField();
            JComboBox InputQuantityCopy = new JComboBox();
            JTextField InputPriceCopy = new JTextField();

            InputNameIngredientCopy.setText(String.valueOf(item.getName_ingredient()));
            InputQuantityCopy.addItem(item.getUnit());
            InputPriceCopy.setText(String.valueOf(item.getQuantity()));

            InputQuantityCopy.setEditable(false);
            InputNameIngredientCopy.setEditable(false);

            BoxInputCopy.setMaximumSize(new java.awt.Dimension(700, 35));
            BoxInputCopy.setMinimumSize(new java.awt.Dimension(700, 35));
            BoxInputCopy.setPreferredSize(new java.awt.Dimension(700, 35));
            BoxInputCopy.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

            InputNameIngredientCopy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
            // InputNameIngredientCopy.setModel(
            // new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2",
            // "Item 3", "Item 4" }));
            BoxInputCopy.add(InputNameIngredientCopy);

            InputQuantityCopy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
            BoxInputCopy.add(InputQuantityCopy);

            InputPriceCopy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
            BoxInputCopy.add(InputPriceCopy);

            jPanel7.add(BoxInputCopy);
        }

        // for (int i = 0; i < countBoxInput; i++) {

        // JPanel BoxInputCopy = new JPanel();
        // JComboBox InputNameIngredientCopy = new JComboBox();
        // for (WareHouseDTO wareHouseDTO : list_ingredient) {

        // InputNameIngredientCopy.addItem(wareHouseDTO.getName());

        // }
        // JTextField InputQuantityCopy = new JTextField();
        // JTextField InputPriceCopy = new JTextField();

        // BoxInputCopy.setMaximumSize(new java.awt.Dimension(700, 35));
        // BoxInputCopy.setMinimumSize(new java.awt.Dimension(700, 35));
        // BoxInputCopy.setPreferredSize(new java.awt.Dimension(700, 35));
        // BoxInputCopy.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        // InputNameIngredientCopy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        // // InputNameIngredientCopy.setModel(
        // // new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2",
        // // "Item 3", "Item 4" }));
        // BoxInputCopy.add(InputNameIngredientCopy);

        // InputQuantityCopy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        // BoxInputCopy.add(InputQuantityCopy);

        // InputPriceCopy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        // BoxInputCopy.add(InputPriceCopy);

        // jPanel7.add(BoxInputCopy);
        // }

        jPanel7.repaint();

    }

    // event clicked
    private void BtnAddMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void BtnMinusMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void BtnCloseMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void BtnMinusActionPerformed(java.awt.event.ActionEvent evt) {
        if (countBoxInput > 1) {
            countBoxInput = countBoxInput - 1;
            generaUI();

        } else {
            countBoxInput = 1; // Đảm bảo countBoxInput không nhỏ hơn 1
            generaUI();
        }

    }

    private void BtnPlusMouseClicked(java.awt.event.MouseEvent evt) {
        countBoxInput = countBoxInput + 1;
        generaUI();
    }

    private void BtnPlusActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void BtnAddActionPerformed(java.awt.event.ActionEvent evt) {

        String valueProduct = jComboBox2.getText();
        String valueNameEnterCoupon = inputName.getText();
        boolean checkValidate = Common.ValidateInputString(valueNameEnterCoupon);
        if (!checkValidate) {
            return;
        }
        ProductDTO productDto = productMap.get(valueProduct);
        System.out.println(valueProduct);
        System.out.println(productDto.getId());
        int account_id = PermissionAccount.getInstance().getAccountId();

        ArrayList<DetailRecipeDTO> list_new_detail_recipe = new ArrayList<DetailRecipeDTO>();

        // Duyệt qua tất cả các thành phần trong jPanel7
        for (Component component : jPanel7.getComponents()) {
            // next first loop

            if (component instanceof JPanel) {
                JPanel panel = (JPanel) component;

                // ứng với JComboBox và hai
                // JTextField
                int index = 0;

                // Khai báo các biến để lưu trữ dữ liệu từ các thành phần con của mỗi JPanel
                String name = "";
                String unit = "";
                int quantity = 0;
                int id_ingredient = -1;

                // Duyệt qua tất cả các thành phần con của mỗi JPanel
                for (Component subComponent : panel.getComponents()) {
                    if (subComponent instanceof JTextField) {

                        JTextField textField = (JTextField) subComponent;

                        if (index == 0) { // Nếu là JTextField đầu tiên, lưu vào unit

                            name = textField.getText();

                        } else if (index == 1) { // Nếu là JTextField thứ hai, lưu vào quantity

                            unit = textField.getText();

                        } else if (index == 2) { // Nếu là JTextField thứ hai, lưu vào quantity
                            try {

                                quantity = Integer.parseInt(textField.getText());
                                if (!Common.ValidateInputDouble(quantity)) {
                                    return;
                                }

                            } catch (NumberFormatException e) {

                                JOptionPane.showMessageDialog(null, "Vui lòng nhập vào là một số");
                                return;
                            }
                        }
                        index++;

                        for (WareHouseDTO item : list_ingredient) {
                            if (item.getName().equals(name)) {
                                id_ingredient = item.getId();
                                break;
                            }

                        }
                    }
                }

                DetailRecipeDTO update_detail_recipe = new DetailRecipeDTO(1, productDto.getId(), id_ingredient,
                        id_recipe, unit, quantity);
                list_new_detail_recipe.add(update_detail_recipe);

            }
        }

        // Kiểm tra xem có thành công chỉnh sửa công thức hay không
        HashMap<Boolean, String> result = RecipeBUS.updateRecipeBUS(list_new_detail_recipe);

        if (result.containsKey(true)) {
            JOptionPane.showMessageDialog(null, result.get(true));
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, result.get(false));
        }
    }

    private void BtnCloseActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);

    }

    // Variables declaration - do not modify
    private javax.swing.JPanel BoxBtn;
    private javax.swing.JPanel BoxInput;
    private javax.swing.JPanel BoxInput1;
    private javax.swing.JPanel BoxName;
    private javax.swing.JPanel BoxName1;
    private javax.swing.JPanel BoxName2;
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton BtnClose;
    private javax.swing.JButton BtnMinus;
    private javax.swing.JButton BtnPlus;
    private javax.swing.JComboBox<String> InputNameIngredient1;
    private javax.swing.JTextField InputPrice1;
    private javax.swing.JTextField InputQuantity1;
    private javax.swing.JLabel NameSupplier;
    private javax.swing.JLabel NameSupplier1;
    private javax.swing.JLabel NameSupplier2;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField jComboBox2;
    private javax.swing.JTextField jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration
}
