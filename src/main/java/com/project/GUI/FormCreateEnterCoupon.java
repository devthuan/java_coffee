/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.project.GUI;

import java.util.ArrayList;

import com.project.BUS.EmployeeBUS;
import com.project.BUS.EnterCouponBUS;
import com.project.BUS.ProductBUS;
import com.project.BUS.RecipeBUS;
import com.project.BUS.SupplierBUS;
import com.project.Common.Common;
import com.project.DAO.EmployeeDAO;
import com.project.DAO.WareHouseDAO;
import com.project.DTO.DetailEnterCouponDTO;
import com.project.DTO.DetailRecipeDTO;
import com.project.DTO.EmployeeDTO;
import com.project.DTO.EnterCouponDTO;
import com.project.DTO.PermissionAccount;
import com.project.DTO.ProductDTO;
import com.project.DTO.SupplierDTO;
import com.project.DTO.WareHouseDTO;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.List;
import java.util.Arrays;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import java.awt.Component;

public class FormCreateEnterCoupon extends javax.swing.JFrame {
    public int countBoxInput = 1;
    private int id_account;

    private ArrayList<SupplierDTO> list_supplier;
    private ArrayList<WareHouseDTO> list_ingredient;
    private ArrayList<EmployeeDTO> list_employee;
    private ArrayList<ProductDTO> list_product;

    private Map<String, WareHouseDTO> ingredientMap;
    private Map<String, SupplierDTO> supplierMap;
    private Map<String, EmployeeDTO> employeeMap;
    private Map<String, ProductDTO> productMap;

    private Map<Integer, List<Object>> ingredient_by_recipe = new HashMap<Integer, List<Object>>();
    private Map<Integer, List<Object>> newDetailIngredient = new HashMap<Integer, List<Object>>();
    private Map<Integer, Integer> quantity_productMap = new HashMap<Integer, Integer>();

    private Map<String, WareHouseDTO> detailIngredientPrice;

    public FormCreateEnterCoupon() {
        id_account = PermissionAccount.getInstance().getAccountId();
        ingredientMap = new HashMap<>();
        supplierMap = new HashMap<>();
        employeeMap = new HashMap<>();
        productMap = new HashMap<>();

        list_supplier = SupplierBUS.get_all_supplier();
        list_ingredient = WareHouseDAO.get_all_ingredients();
        list_employee = EmployeeDAO.get_all_employee();
        list_product = ProductBUS.getAllProduct();

        initComponents();

        for (WareHouseDTO wareHouseDTO : list_ingredient) {
            // System.out.println(wareHouseDTO.getName());
            ingredientMap.put(wareHouseDTO.getName(), wareHouseDTO);
        }
        for (SupplierDTO supplierDTO : list_supplier) {
            jComboBox2.addItem(supplierDTO.getName_supplier());
            supplierMap.put(supplierDTO.getName_supplier(), supplierDTO);
        }

        for (EmployeeDTO employeeDTO : list_employee) {

            employeeMap.put(employeeDTO.getName(), employeeDTO);
        }

        for (ProductDTO productDto : list_product) {

            ArrayList<DetailRecipeDTO> check_product_recipe = RecipeBUS.getRecipeByProductId(productDto.getId());
            if (check_product_recipe.size() != 0) {
                jComboBox1.addItem(productDto.getProduct_name());
                productMap.put(productDto.getProduct_name(), productDto);

            }
        }

        for (EmployeeDTO employeeDTO : list_employee) {
            if (employeeDTO.getAccount_id() == PermissionAccount.getInstance().getAccountId()) {

                jComboBox3.setText(String.valueOf(employeeDTO.getName()));
            }
        }
        jComboBox3.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        BoxName1 = new javax.swing.JPanel();
        NameSupplier1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        BoxName2 = new javax.swing.JPanel();
        NameSupplier2 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JTextField();
        BoxName = new javax.swing.JPanel();
        NameSupplier = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        BoxName3 = new javax.swing.JPanel();
        NameSupplier3 = new javax.swing.JLabel();
        inputName1 = new javax.swing.JTextField();
        BoxName4 = new javax.swing.JPanel();
        NameSupplier4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        BoxName5 = new javax.swing.JPanel();
        NameSupplier5 = new javax.swing.JLabel();
        inputName3 = new javax.swing.JTextField();
        BoxName6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        BoxInput = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BoxInput1 = new javax.swing.JPanel();
        InputNameIngredient1 = new javax.swing.JComboBox<>();
        InputQuantity1 = new javax.swing.JTextField();
        InputPrice1 = new javax.swing.JTextField();
        InputPrice2 = new javax.swing.JTextField();
        BoxBtn = new javax.swing.JPanel();
        BtnAdd = new javax.swing.JButton();
        BtnClose = new javax.swing.JButton();

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(96, 153, 102));
        jLabel5.setText("+");

        setMinimumSize(new java.awt.Dimension(722, 453));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(100, 70));
        jPanel1.setPreferredSize(new java.awt.Dimension(722, 70));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nhập nguyên liệu");
        jLabel1.setPreferredSize(new java.awt.Dimension(37, 50));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE));

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setMaximumSize(new java.awt.Dimension(474, 350));
        jPanel2.setMinimumSize(new java.awt.Dimension(474, 350));
        jPanel2.setPreferredSize(new java.awt.Dimension(474, 350));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel5.setPreferredSize(new java.awt.Dimension(1010, 220));
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 10));

        BoxName1.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName1.setPreferredSize(new java.awt.Dimension(330, 45));
        BoxName1.setLayout(new java.awt.BorderLayout(10, 0));

        NameSupplier1.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        NameSupplier1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NameSupplier1.setText("Tên nhà cung cấp");
        NameSupplier1.setMaximumSize(new java.awt.Dimension(130, 40));
        NameSupplier1.setMinimumSize(new java.awt.Dimension(130, 40));
        NameSupplier1.setPreferredSize(new java.awt.Dimension(130, 40));
        NameSupplier1.setVerifyInputWhenFocusTarget(false);
        BoxName1.add(NameSupplier1, java.awt.BorderLayout.LINE_START);

        jComboBox2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        // jComboBox2.setModel(
        // new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2",
        // "Item 3", "Item 4" }));
        BoxName1.add(jComboBox2, java.awt.BorderLayout.CENTER);

        jPanel5.add(BoxName1);

        BoxName2.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName2.setPreferredSize(new java.awt.Dimension(330, 45));
        BoxName2.setLayout(new java.awt.BorderLayout(10, 0));

        NameSupplier2.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        NameSupplier2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NameSupplier2.setText("Tên nhân viên");
        NameSupplier2.setMaximumSize(new java.awt.Dimension(130, 40));
        NameSupplier2.setMinimumSize(new java.awt.Dimension(130, 40));
        NameSupplier2.setPreferredSize(new java.awt.Dimension(130, 40));
        NameSupplier2.setVerifyInputWhenFocusTarget(false);
        BoxName2.add(NameSupplier2, java.awt.BorderLayout.LINE_START);

        jComboBox3.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        // jComboBox3.setModel(
        // new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2",
        // "Item 3", "Item 4" }));
        BoxName2.add(jComboBox3, java.awt.BorderLayout.CENTER);

        jPanel5.add(BoxName2);

        BoxName.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName.setPreferredSize(new java.awt.Dimension(500, 45));
        BoxName.setLayout(new java.awt.BorderLayout(10, 0));

        NameSupplier.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        NameSupplier.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NameSupplier.setText("Tên phiếu nhập");
        NameSupplier.setMaximumSize(new java.awt.Dimension(130, 40));
        NameSupplier.setMinimumSize(new java.awt.Dimension(130, 40));
        NameSupplier.setPreferredSize(new java.awt.Dimension(120, 40));
        NameSupplier.setVerifyInputWhenFocusTarget(false);
        BoxName.add(NameSupplier, java.awt.BorderLayout.LINE_START);

        inputName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        BoxName.add(inputName, java.awt.BorderLayout.CENTER);

        jPanel5.add(BoxName);

        BoxName3.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName3.setPreferredSize(new java.awt.Dimension(330, 45));
        BoxName3.setLayout(new java.awt.BorderLayout(10, 0));

        NameSupplier3.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        NameSupplier3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NameSupplier3.setText("bonus");
        NameSupplier3.setMaximumSize(new java.awt.Dimension(130, 40));
        NameSupplier3.setMinimumSize(new java.awt.Dimension(130, 40));
        NameSupplier3.setPreferredSize(new java.awt.Dimension(120, 40));
        NameSupplier3.setVerifyInputWhenFocusTarget(false);
        BoxName3.add(NameSupplier3, java.awt.BorderLayout.LINE_START);

        inputName1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        // BoxName3.add(inputName1, java.awt.BorderLayout.CENTER);

        // jPanel5.add(BoxName3);

        BoxName4.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName4.setPreferredSize(new java.awt.Dimension(330, 45));
        BoxName4.setLayout(new java.awt.BorderLayout(10, 0));

        NameSupplier4.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        NameSupplier4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NameSupplier4.setText("Sản phẩm");
        NameSupplier4.setMaximumSize(new java.awt.Dimension(130, 40));
        NameSupplier4.setMinimumSize(new java.awt.Dimension(130, 40));
        NameSupplier4.setPreferredSize(new java.awt.Dimension(120, 40));
        NameSupplier4.setVerifyInputWhenFocusTarget(false);
        BoxName4.add(NameSupplier4, java.awt.BorderLayout.LINE_START);

        // jComboBox1.setModel(
        // new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2",
        // "Item 3", "Item 4" }));
        BoxName4.add(jComboBox1, java.awt.BorderLayout.CENTER);

        jPanel5.add(BoxName4);

        BoxName5.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName5.setPreferredSize(new java.awt.Dimension(330, 45));
        BoxName5.setLayout(new java.awt.BorderLayout(10, 0));

        NameSupplier5.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        NameSupplier5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NameSupplier5.setText("Số lượng");
        NameSupplier5.setMaximumSize(new java.awt.Dimension(130, 40));
        NameSupplier5.setMinimumSize(new java.awt.Dimension(130, 40));
        NameSupplier5.setPreferredSize(new java.awt.Dimension(120, 40));
        NameSupplier5.setVerifyInputWhenFocusTarget(false);
        BoxName5.add(NameSupplier5, java.awt.BorderLayout.LINE_START);

        inputName3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        BoxName5.add(inputName3, java.awt.BorderLayout.CENTER);

        jPanel5.add(BoxName5);

        BoxName6.setMinimumSize(new java.awt.Dimension(330, 45));
        BoxName6.setPreferredSize(new java.awt.Dimension(330, 45));
        BoxName6.setLayout(new java.awt.BorderLayout(10, 0));

        jButton1.setText("Tính toán");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        BoxName6.add(jButton1, java.awt.BorderLayout.CENTER);

        jPanel5.add(BoxName6);

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.Y_AXIS));

        // BoxInput.setMaximumSize(new java.awt.Dimension(700, 35));
        // BoxInput.setMinimumSize(new java.awt.Dimension(700, 35));
        // BoxInput.setPreferredSize(new java.awt.Dimension(700, 35));
        // BoxInput.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        // jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        // jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        // jLabel2.setText("Tên Nguyên liệu");
        // BoxInput.add(jLabel2);

        // jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        // jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        // jLabel3.setText("Số lượng");
        // BoxInput.add(jLabel3);

        // jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        // jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        // jLabel4.setText("Giá");
        // BoxInput.add(jLabel4);

        // jPanel7.add(BoxInput);

        // BoxInput1.setMaximumSize(new java.awt.Dimension(700, 35));
        // BoxInput1.setMinimumSize(new java.awt.Dimension(700, 35));
        // BoxInput1.setPreferredSize(new java.awt.Dimension(700, 35));
        // BoxInput1.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        // InputNameIngredient1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        // InputNameIngredient1.setModel(
        // new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2",
        // "Item 3", "Item 4" }));
        // BoxInput1.add(InputNameIngredient1);

        // InputQuantity1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        // BoxInput1.add(InputQuantity1);

        // InputPrice1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        // BoxInput1.add(InputPrice1);

        // jPanel7.add(BoxInput1);

        jScrollPane2.setViewportView(jPanel7);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE));
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                .addContainerGap()));

        jPanel2.add(jPanel6, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        BoxBtn.setPreferredSize(new java.awt.Dimension(715, 55));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 20, 0);
        flowLayout1.setAlignOnBaseline(true);
        BoxBtn.setLayout(flowLayout1);

        BtnAdd.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        BtnAdd.setText("Thêm");
        BtnAdd.setBorder(new javax.swing.border.MatteBorder(null));
        BtnAdd.setMaximumSize(new java.awt.Dimension(100, 55));
        BtnAdd.setMinimumSize(new java.awt.Dimension(100, 55));
        BtnAdd.setPreferredSize(new java.awt.Dimension(100, 55));
        BtnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnAddMouseClicked(evt);
            }
        });
        BtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddActionPerformed(evt);
            }
        });
        BoxBtn.add(BtnAdd);

        BtnClose.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        BtnClose.setText("Đóng");
        BtnClose.setBorder(new javax.swing.border.MatteBorder(null));
        BtnClose.setMaximumSize(new java.awt.Dimension(100, 55));
        BtnClose.setMinimumSize(new java.awt.Dimension(100, 55));
        BtnClose.setPreferredSize(new java.awt.Dimension(100, 55));
        BtnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnCloseMouseClicked(evt);
            }
        });
        BtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCloseActionPerformed(evt);
            }
        });
        BoxBtn.add(BtnClose);

        getContentPane().add(BoxBtn, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>

    public void generaTitleUI() {
        BoxInput.setMaximumSize(new java.awt.Dimension(700, 35));
        BoxInput.setMinimumSize(new java.awt.Dimension(700, 35));
        BoxInput.setPreferredSize(new java.awt.Dimension(700, 35));
        BoxInput.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Loại Nguyên liệu");
        BoxInput.add(jLabel2);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("đơn vị");
        BoxInput.add(jLabel3);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Số lượng");
        BoxInput.add(jLabel4);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("giá");
        BoxInput.add(jLabel6);

        jPanel7.add(BoxInput);
    }

    public void generaUI(Map<Integer, List<Object>> data) {

        jPanel7.removeAll(); // Clear jPanel7 before adding new components
        jPanel7.revalidate();

        generaTitleUI();

        for (Entry<Integer, List<Object>> entry : ingredient_by_recipe.entrySet()) {
            List<Object> info = entry.getValue();

            JPanel BoxInputCopy = new JPanel();

            JTextField InputNameIngredientCopy = new JTextField();
            JTextField InputQuantityCopy = new JTextField();
            JTextField InputPriceCopy = new JTextField();
            JTextField InputPriceCopy2 = new JTextField();

            for (WareHouseDTO wareHouseDTO : list_ingredient) {
                if (wareHouseDTO.getId() == entry.getKey()) {

                    InputNameIngredientCopy.setText(wareHouseDTO.getName());
                }
            }
            InputPriceCopy.setText(String.valueOf(info.get(0)));
            InputQuantityCopy.setText(String.valueOf(info.get(1)));

            InputNameIngredientCopy.setEditable(false);
            InputQuantityCopy.setEditable(false);
            InputPriceCopy.setEditable(false);

            BoxInputCopy.setMaximumSize(new java.awt.Dimension(700, 35));
            BoxInputCopy.setMinimumSize(new java.awt.Dimension(700, 35));
            BoxInputCopy.setPreferredSize(new java.awt.Dimension(700, 35));
            BoxInputCopy.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

            InputNameIngredientCopy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
            // InputNameIngredientCopy.setModel(
            // new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2",
            // "Item 3", "Item 4" }));
            BoxInputCopy.add(InputNameIngredientCopy);

            InputQuantityCopy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
            BoxInputCopy.add(InputQuantityCopy);

            InputPriceCopy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
            BoxInputCopy.add(InputPriceCopy);

            InputPriceCopy2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
            BoxInputCopy.add(InputPriceCopy2);

            jPanel7.add(BoxInputCopy);
        }

        jPanel7.repaint();

    }

    // event clicked
    private void BtnAddMouseClicked(java.awt.event.MouseEvent evt) {
        String name_enterCoupon = inputName.getText();
        String valueEmployee = jComboBox3.getText();
        String valueSupplier = (String) jComboBox2.getSelectedItem();
        String valueProduct = (String) jComboBox1.getSelectedItem();

        ProductDTO productDto = productMap.get(valueProduct);
        SupplierDTO supplierDto = supplierMap.get(valueSupplier);
        EmployeeDTO employeeDto = employeeMap.get(valueEmployee);

        ArrayList<DetailEnterCouponDTO> new_detail_enterCoupon = new ArrayList<>();
        for (Component component : jPanel7.getComponents()) {

            if (component instanceof JPanel) {
                JPanel panel = (JPanel) component;

                // ứng với JComboBox và hai
                // JTextField
                int index = 0;

                // Khai báo các biến để lưu trữ dữ liệu từ các thành phần con của mỗi JPanel
                String name_ingredient = null;
                String unit_ingredient = null;
                int quantity_ingredient = -1;
                Double price = 0.0;

                // Duyệt qua tất cả các thành phần con của mỗi JPanel
                for (Component subComponent : panel.getComponents()) {
                    if (subComponent instanceof JTextField) {

                        JTextField textField = (JTextField) subComponent;

                        if (index == 0) { // Nếu là JTextField đầu tiên
                            name_ingredient = textField.getText();
                        } else if (index == 1) {
                            unit_ingredient = textField.getText();
                        } else if (index == 2) {
                            try {

                                quantity_ingredient = Integer.parseInt(textField.getText());
                                if (!Common.ValidateInputDouble(quantity_ingredient)) {
                                    return;
                                }
                            } catch (NumberFormatException e) {
                                JOptionPane.showMessageDialog(null, "Vui lòng nhập vào là một số");
                                return;
                            }
                        } else if (index == 3) {
                            try {
                                price = Double.parseDouble(textField.getText());
                                if (!Common.ValidateInputDouble(price)) {
                                    return;
                                }
                            } catch (NumberFormatException e) {
                                JOptionPane.showMessageDialog(null, "Vui lòng nhập vào là một số");
                                return;
                            }
                        }
                        index++;
                    }
                }

                int id_ingredient = -1;
                for (WareHouseDTO wareHouseDTO : list_ingredient) {
                    if (wareHouseDTO.getName().equals(name_ingredient)) {
                        id_ingredient = wareHouseDTO.getId();
                    }
                }

                // System.out.println("check : " + name_ingredient + " " + id_ingredient);
                // System.out.println("check : " + unit_ingredient);
                // System.out.println("check : " + quantity_ingredient);
                // System.out.println("check : " + price);

                // newDetailIngredient.put(id_ingredient, Arrays.asList(quantity_ingredient,
                // price));
                new_detail_enterCoupon.add(new DetailEnterCouponDTO(id_ingredient, quantity_ingredient, price));

            }
        }

        for (DetailEnterCouponDTO detailEnterCouponDTO : new_detail_enterCoupon) {
            System.out.println("id ingredient: " +
                    detailEnterCouponDTO.getIngredient_id());
            System.out.println("quantity: " + detailEnterCouponDTO.getQuantity());
            System.out.println("price: " + detailEnterCouponDTO.getPrice());

        }

        EnterCouponDTO new_enterCoupon = new EnterCouponDTO(name_enterCoupon,
                id_account, supplierDto.getId());

        boolean check_status = EnterCouponBUS.createdEnterCoupon(new_enterCoupon,
                new_detail_enterCoupon, quantity_productMap);

        if (check_status) {
            JOptionPane.showMessageDialog(null, "Nhập nguyên liệu thành công");
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Nhập nguyên liệu thất bại");

        }

    }

    private void BtnCloseMouseClicked(java.awt.event.MouseEvent evt) {
        this.setVisible(false);
    }

    private void BtnAddActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void BtnCloseActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    // btn calculation
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {

        // Kiểm tra dữ liệu đầu vào trước khi chuyển đổi
        int bonous = 0;
        int quantity = 0;

        try {
            // bonous = Integer.parseInt(inputName1.getText());
            quantity = Integer.parseInt(inputName3.getText());
        } catch (NumberFormatException e) {
            System.out.println("Vui lòng nhập giá trị hợp lệ cho bonus hoặc quantity.");
            JOptionPane.showMessageDialog(null, "Vui lòng nhập giá trị hợp lệ ");

            return; // Thoát nếu giá trị không hợp lệ
        }

        String valueProduct = (String) jComboBox1.getSelectedItem();

        ProductDTO productDto = productMap.get(valueProduct);

        ArrayList<DetailRecipeDTO> check_product = RecipeBUS.getRecipeByProductId(productDto.getId());

        if (check_product.size() == 0) {
            JOptionPane.showMessageDialog(null, "sản phẩm này chưa có công thức.");
            return;
        }

        System.out.println("quantity: " + quantity);
        System.out.println("product id : " + productDto.getId());

        calculate_ingredient(quantity, productDto.getId(), bonous);

        for (Entry<Integer, List<Object>> entry : ingredient_by_recipe.entrySet()) {
            System.out.println("Nguyen Lieu Id: " + entry.getKey());
            List<Object> info = entry.getValue();
            System.out.println("So Luong: " + info.get(0));
            System.out.println("Don Vi: " + info.get(1));
        }
        generaUI(ingredient_by_recipe);

        quantity_productMap.put(productDto.getId(), quantity);

    }

    private void calculate_ingredient(int quantity_product, int id_product, int bonous_product) {
        ArrayList<DetailRecipeDTO> data_recipe = RecipeBUS.getRecipeByProductId(id_product);

        for (DetailRecipeDTO detailRecipeDTO : data_recipe) {
            int cal_quantity = detailRecipeDTO.getQuantity() * quantity_product;
            // System.out.println("check: " + quantity_product);
            // System.out.println("check: " + cal_quantity);
            // System.out.println("check: " + detailRecipeDTO.getQuantity());
            // if (detailRecipeDTO.getUnit().equals("String")) {
            // continue;
            // }
            ingredient_by_recipe.put(detailRecipeDTO.getId_ingredient(),
                    Arrays.asList(cal_quantity, detailRecipeDTO.getUnit()));
        }
    }

    // Variables declaration - do not modify
    private javax.swing.JPanel BoxBtn;
    private javax.swing.JPanel BoxInput;
    private javax.swing.JPanel BoxInput1;
    private javax.swing.JPanel BoxName;
    private javax.swing.JPanel BoxName1;
    private javax.swing.JPanel BoxName2;
    private javax.swing.JPanel BoxName3;
    private javax.swing.JPanel BoxName4;
    private javax.swing.JPanel BoxName5;
    private javax.swing.JPanel BoxName6;
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton BtnClose;
    private javax.swing.JComboBox<String> InputNameIngredient1;
    private javax.swing.JTextField InputPrice1;
    private javax.swing.JTextField InputPrice2;
    private javax.swing.JTextField InputQuantity1;
    private javax.swing.JLabel NameSupplier;
    private javax.swing.JLabel NameSupplier1;
    private javax.swing.JLabel NameSupplier2;
    private javax.swing.JLabel NameSupplier3;
    private javax.swing.JLabel NameSupplier4;
    private javax.swing.JLabel NameSupplier5;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField inputName1;
    private javax.swing.JTextField inputName3;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JTextField jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration
}
